"use strict";

/*
 * @file
 * example.create-remove-binder.js
 *
 * Requirements:
 * - create a file "credentials.json" similar to the following:
 *
 *   {
 *     "host": "https://your-agency-subdomain.veevavault.com/api/v18.3/",
 *     "username": "my-username@vv-agency.com",
 *     "password": "my-password"
 *   }
 *
 * This example demonstrates:
 * - authenticating to the Veeva API
 * - creating a new binder
 * - updating the binder name
 * - retrieving all binders
 * - deleting the binder we created
 */

const fs = require("file-system");

const vault = require("../veeva-vault");

var secret = JSON.parse(fs.readFileSync("credentials.json", "utf8"));

// Remember the id of the binder we create, so we can delete it.
var my_binder_id = null;

vault.verbose(true);

vault
  .authenticate({
    host: secret.host,
    username: secret.username,
    password: secret.password
  })
  .then(function() {
    // Create a new binder.
    var binder = {
      name__v: "My Demo Binder Name",
      title__v: "My Demo Binder Title",
      crm_presentation_id__v: "my_demo_binder_id",
      type__v: "Multichannel Presentation",
      lifecycle__v: "Binder Lifecycle",
      clm_content__v: true,
      crm_media_type__v: "HTML",
      status_v: "Draft",
      major_version_number: "0",
      minor_version_number: "1",
      product__v: "00P000000000701", // Rellyant
      country__v: "unitedStates"
    };
    return vault.createBinder(binder);
  })
  .then(function(binder) {
    console.log("\nCreated binder:\n", binder);

    my_binder_id = binder.document.id;

    var binder_data = {
      name__v: "My Demo Binder Name UPDATED"
    };
    console.log("\nChanging binder name...");

    // Update the binder name.
    return vault.updateBinder(binder.document.id, binder_data);
  })
  .then(function() {
    // Get a list of all binders.
    return vault.getBinders();
  })
  .then(function(binders) {
    // Show the names of all found binders.
    console.log("\n\nRetrieved all binders:");
    for (var i = 0; i < binders.length; i++) {
      console.log(
        "Found binder '" +
          binders[i].name__v +
          "' (id=" +
          binders[i].id +
          ", " +
          binders[i].crm_presentation_id__v +
          ")"
      );
    }

    // Delete the binder we created.
    return vault.deleteBinder(my_binder_id);
  })
  .catch(function(e) {
    console.log("\n\nError somewhere...:", e.message);
  });
